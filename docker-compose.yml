# version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - pong_network
    volumes:
      - static_volume:/app/staticfiles
      - ./nginx.conf:/etc/nginx/nginx.conf

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      ganache:
        condition: service_started

    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - pong_network
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - BLOCKCHAIN_PROVIDER_URL=http://ganache:8545  # 블록체인 URL 추가
    command: >
      sh -c "
        python deploy_contract.py &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8000 pong_project.wsgi:application
      "
  
  ganache:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.ganache # 위에서 만든 Dockerfile 경로
    ports:
      - "8545:8545"
    networks:
      - pong_network
    volumes:
      - ganache_data:/ganache_data  # 볼륨 추가
    command: --db /ganache_data  # Ganache 데이터 저장 위치 지정

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - pong_network
    ports:
      - "${DB_PORT:-5432}:5432"

volumes:
  postgres_data:
  static_volume:
  ganache_data:

networks:
  pong_network:
    driver: bridge