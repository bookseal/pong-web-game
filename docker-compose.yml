# version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - pong_network
    volumes:
      - static_volume:/app/staticfiles
      - ./nginx.conf:/etc/nginx/nginx.conf

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    # platform: linux/arm64
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    env_file:
      - .env
    depends_on:
      - db
      - ganache
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - pong_network
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    entrypoint: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py compilemessages > /dev/null 2>&1 &&
      python manage.py collectstatic --noinput &&
      python deploy_contract.py &&
      gunicorn --bind 0.0.0.0:8000 pong_project.wsgi:application
      "

  ganache:
    image: trufflesuite/ganache:latest
    # platform: linux/amd64
    ports:
      - "8545:8545"
    networks:
      - pong_network
    command: >
      --wallet.mnemonic "candy maple cake sugar pudding cream honey rich smooth crumble sweet treat"
      --chain.chainId 1337
      --wallet.totalAccounts 10
      --server.host 0.0.0.0
      --server.port 8545
      --chain.networkId 5777

  db:
    image: postgres:13
    # platform: linux/arm64
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - pong_network
    ports:
      - "${DB_PORT:-5432}:5432"

volumes:
  postgres_data:
  static_volume:

networks:
  pong_network:
    driver: bridge